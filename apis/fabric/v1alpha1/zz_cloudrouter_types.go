// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AccountInitParameters struct {

	// Account Number
	AccountNumber *float64 `json:"accountNumber,omitempty" tf:"account_number,omitempty"`
}

type AccountObservation struct {

	// Account Number
	AccountNumber *float64 `json:"accountNumber,omitempty" tf:"account_number,omitempty"`
}

type AccountParameters struct {

	// Account Number
	// +kubebuilder:validation:Optional
	AccountNumber *float64 `json:"accountNumber,omitempty" tf:"account_number,omitempty"`
}

type ChangeLogInitParameters struct {
}

type ChangeLogObservation struct {
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	CreatedByEmail *string `json:"createdByEmail,omitempty" tf:"created_by_email,omitempty"`

	CreatedByFullName *string `json:"createdByFullName,omitempty" tf:"created_by_full_name,omitempty"`

	CreatedDateTime *string `json:"createdDateTime,omitempty" tf:"created_date_time,omitempty"`

	DeletedBy *string `json:"deletedBy,omitempty" tf:"deleted_by,omitempty"`

	DeletedByEmail *string `json:"deletedByEmail,omitempty" tf:"deleted_by_email,omitempty"`

	DeletedByFullName *string `json:"deletedByFullName,omitempty" tf:"deleted_by_full_name,omitempty"`

	DeletedDateTime *string `json:"deletedDateTime,omitempty" tf:"deleted_date_time,omitempty"`

	UpdatedBy *string `json:"updatedBy,omitempty" tf:"updated_by,omitempty"`

	UpdatedByEmail *string `json:"updatedByEmail,omitempty" tf:"updated_by_email,omitempty"`

	UpdatedByFullName *string `json:"updatedByFullName,omitempty" tf:"updated_by_full_name,omitempty"`

	UpdatedDateTime *string `json:"updatedDateTime,omitempty" tf:"updated_date_time,omitempty"`
}

type ChangeLogParameters struct {
}

type CloudRouterInitParameters struct {

	// Customer account information that is associated with this Fabric Cloud Router
	Account []AccountInitParameters `json:"account,omitempty" tf:"account,omitempty"`

	// Customer-provided Fabric Cloud Router description
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Fabric Cloud Router location
	Location []LocationInitParameters `json:"location,omitempty" tf:"location,omitempty"`

	// Fabric Cloud Router name. An alpha-numeric 24 characters string which can include only hyphens and underscores
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Preferences for notifications on Fabric Cloud Router configuration or status changes
	Notifications []NotificationsInitParameters `json:"notifications,omitempty" tf:"notifications,omitempty"`

	// Order information related to this Fabric Cloud Router
	Order []OrderInitParameters `json:"order,omitempty" tf:"order,omitempty"`

	// Fabric Cloud Router location
	Package []PackageInitParameters `json:"package,omitempty" tf:"package,omitempty"`

	// Fabric Cloud Router project
	Project []ProjectInitParameters `json:"project,omitempty" tf:"project,omitempty"`

	// Defines the FCR type like XF_ROUTER
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type CloudRouterObservation struct {

	// Customer account information that is associated with this Fabric Cloud Router
	Account []AccountObservation `json:"account,omitempty" tf:"account,omitempty"`

	// Access point used and maximum number of IPv4 BGP routes
	BGPIPv4RoutesCount *float64 `json:"bgpIpv4RoutesCount,omitempty" tf:"bgp_ipv4_routes_count,omitempty"`

	// Access point used and maximum number of IPv6 BGP routes
	BGPIPv6RoutesCount *float64 `json:"bgpIpv6RoutesCount,omitempty" tf:"bgp_ipv6_routes_count,omitempty"`

	// Captures Fabric Cloud Router lifecycle change information
	ChangeLog []ChangeLogObservation `json:"changeLog,omitempty" tf:"change_log,omitempty"`

	// Number of connections associated with this Access point
	ConnectionsCount *float64 `json:"connectionsCount,omitempty" tf:"connections_count,omitempty"`

	// Customer-provided Fabric Cloud Router description
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Equinix ASN
	EquinixAsn *float64 `json:"equinixAsn,omitempty" tf:"equinix_asn,omitempty"`

	// Fabric Cloud Router URI information
	Href *string `json:"href,omitempty" tf:"href,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Fabric Cloud Router location
	Location []LocationObservation `json:"location,omitempty" tf:"location,omitempty"`

	// Fabric Cloud Router name. An alpha-numeric 24 characters string which can include only hyphens and underscores
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Preferences for notifications on Fabric Cloud Router configuration or status changes
	Notifications []NotificationsObservation `json:"notifications,omitempty" tf:"notifications,omitempty"`

	// Order information related to this Fabric Cloud Router
	Order []OrderObservation `json:"order,omitempty" tf:"order,omitempty"`

	// Fabric Cloud Router location
	Package []PackageObservation `json:"package,omitempty" tf:"package,omitempty"`

	// Fabric Cloud Router project
	Project []ProjectObservation `json:"project,omitempty" tf:"project,omitempty"`

	// Fabric Cloud Router overall state
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// Defines the FCR type like XF_ROUTER
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type CloudRouterParameters struct {

	// Customer account information that is associated with this Fabric Cloud Router
	// +kubebuilder:validation:Optional
	Account []AccountParameters `json:"account,omitempty" tf:"account,omitempty"`

	// Customer-provided Fabric Cloud Router description
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Fabric Cloud Router location
	// +kubebuilder:validation:Optional
	Location []LocationParameters `json:"location,omitempty" tf:"location,omitempty"`

	// Fabric Cloud Router name. An alpha-numeric 24 characters string which can include only hyphens and underscores
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Preferences for notifications on Fabric Cloud Router configuration or status changes
	// +kubebuilder:validation:Optional
	Notifications []NotificationsParameters `json:"notifications,omitempty" tf:"notifications,omitempty"`

	// Order information related to this Fabric Cloud Router
	// +kubebuilder:validation:Optional
	Order []OrderParameters `json:"order,omitempty" tf:"order,omitempty"`

	// Fabric Cloud Router location
	// +kubebuilder:validation:Optional
	Package []PackageParameters `json:"package,omitempty" tf:"package,omitempty"`

	// Fabric Cloud Router project
	// +kubebuilder:validation:Optional
	Project []ProjectParameters `json:"project,omitempty" tf:"project,omitempty"`

	// Defines the FCR type like XF_ROUTER
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type LocationInitParameters struct {

	// IBX Code
	Ibx *string `json:"ibx,omitempty" tf:"ibx,omitempty"`

	// Access point metro code
	MetroCode *string `json:"metroCode,omitempty" tf:"metro_code,omitempty"`

	// Access point metro name
	MetroName *string `json:"metroName,omitempty" tf:"metro_name,omitempty"`

	// Access point region
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type LocationObservation struct {

	// IBX Code
	Ibx *string `json:"ibx,omitempty" tf:"ibx,omitempty"`

	// Access point metro code
	MetroCode *string `json:"metroCode,omitempty" tf:"metro_code,omitempty"`

	// Access point metro name
	MetroName *string `json:"metroName,omitempty" tf:"metro_name,omitempty"`

	// Access point region
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type LocationParameters struct {

	// IBX Code
	// +kubebuilder:validation:Optional
	Ibx *string `json:"ibx,omitempty" tf:"ibx,omitempty"`

	// Access point metro code
	// +kubebuilder:validation:Optional
	MetroCode *string `json:"metroCode,omitempty" tf:"metro_code,omitempty"`

	// Access point metro name
	// +kubebuilder:validation:Optional
	MetroName *string `json:"metroName,omitempty" tf:"metro_name,omitempty"`

	// Access point region
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type NotificationsInitParameters struct {

	// Array of contact emails
	Emails []*string `json:"emails,omitempty" tf:"emails,omitempty"`

	// Send interval
	SendInterval *string `json:"sendInterval,omitempty" tf:"send_interval,omitempty"`

	// Notification Type - ALL,CONNECTION_APPROVAL,SALES_REP_NOTIFICATIONS, NOTIFICATIONS
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NotificationsObservation struct {

	// Array of contact emails
	Emails []*string `json:"emails,omitempty" tf:"emails,omitempty"`

	// Send interval
	SendInterval *string `json:"sendInterval,omitempty" tf:"send_interval,omitempty"`

	// Notification Type - ALL,CONNECTION_APPROVAL,SALES_REP_NOTIFICATIONS, NOTIFICATIONS
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NotificationsParameters struct {

	// Array of contact emails
	// +kubebuilder:validation:Optional
	Emails []*string `json:"emails" tf:"emails,omitempty"`

	// Send interval
	// +kubebuilder:validation:Optional
	SendInterval *string `json:"sendInterval,omitempty" tf:"send_interval,omitempty"`

	// Notification Type - ALL,CONNECTION_APPROVAL,SALES_REP_NOTIFICATIONS, NOTIFICATIONS
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrderInitParameters struct {

	// Billing tier for connection bandwidth
	BillingTier *string `json:"billingTier,omitempty" tf:"billing_tier,omitempty"`

	// Purchase order number
	PurchaseOrderNumber *string `json:"purchaseOrderNumber,omitempty" tf:"purchase_order_number,omitempty"`
}

type OrderObservation struct {

	// Billing tier for connection bandwidth
	BillingTier *string `json:"billingTier,omitempty" tf:"billing_tier,omitempty"`

	// Order Identification
	OrderID *string `json:"orderId,omitempty" tf:"order_id,omitempty"`

	// Order Reference Number
	OrderNumber *string `json:"orderNumber,omitempty" tf:"order_number,omitempty"`

	// Purchase order number
	PurchaseOrderNumber *string `json:"purchaseOrderNumber,omitempty" tf:"purchase_order_number,omitempty"`
}

type OrderParameters struct {

	// Billing tier for connection bandwidth
	// +kubebuilder:validation:Optional
	BillingTier *string `json:"billingTier,omitempty" tf:"billing_tier,omitempty"`

	// Purchase order number
	// +kubebuilder:validation:Optional
	PurchaseOrderNumber *string `json:"purchaseOrderNumber,omitempty" tf:"purchase_order_number,omitempty"`
}

type PackageInitParameters struct {

	// Fabric Cloud Router package code
	Code *string `json:"code,omitempty" tf:"code,omitempty"`
}

type PackageObservation struct {

	// Fabric Cloud Router package code
	Code *string `json:"code,omitempty" tf:"code,omitempty"`
}

type PackageParameters struct {

	// Fabric Cloud Router package code
	// +kubebuilder:validation:Optional
	Code *string `json:"code" tf:"code,omitempty"`
}

type ProjectInitParameters struct {

	// Unique Resource URL
	Href *string `json:"href,omitempty" tf:"href,omitempty"`

	// Project Id
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`
}

type ProjectObservation struct {

	// Unique Resource URL
	Href *string `json:"href,omitempty" tf:"href,omitempty"`

	// Project Id
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`
}

type ProjectParameters struct {

	// Unique Resource URL
	// +kubebuilder:validation:Optional
	Href *string `json:"href,omitempty" tf:"href,omitempty"`

	// Project Id
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`
}

// CloudRouterSpec defines the desired state of CloudRouter
type CloudRouterSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CloudRouterParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CloudRouterInitParameters `json:"initProvider,omitempty"`
}

// CloudRouterStatus defines the observed state of CloudRouter.
type CloudRouterStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CloudRouterObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CloudRouter is the Schema for the CloudRouters API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,equinix}
type CloudRouter struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.notifications) || (has(self.initProvider) && has(self.initProvider.notifications))",message="spec.forProvider.notifications is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.__package__) || (has(self.initProvider) && has(self.initProvider.__package__))",message="spec.forProvider.package is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   CloudRouterSpec   `json:"spec"`
	Status CloudRouterStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CloudRouterList contains a list of CloudRouters
type CloudRouterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CloudRouter `json:"items"`
}

// Repository type metadata.
var (
	CloudRouter_Kind             = "CloudRouter"
	CloudRouter_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CloudRouter_Kind}.String()
	CloudRouter_KindAPIVersion   = CloudRouter_Kind + "." + CRDGroupVersion.String()
	CloudRouter_GroupVersionKind = CRDGroupVersion.WithKind(CloudRouter_Kind)
)

func init() {
	SchemeBuilder.Register(&CloudRouter{}, &CloudRouterList{})
}
