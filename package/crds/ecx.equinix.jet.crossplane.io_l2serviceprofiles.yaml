---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: l2serviceprofiles.ecx.equinix.jet.crossplane.io
spec:
  group: ecx.equinix.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - equinix
    kind: L2Serviceprofile
    listKind: L2ServiceprofileList
    plural: l2serviceprofiles
    singular: l2serviceprofile
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: L2Serviceprofile is the Schema for the L2Serviceprofiles API.
          <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: L2ServiceprofileSpec defines the desired state of L2Serviceprofile
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  apiIntegration:
                    description: Specifies the API integration ID that was provided
                      to the customer during onboarding
                    type: boolean
                  authkeyLabel:
                    description: Name of the authentication key label to be used by
                      the Authentication Key service
                    type: string
                  bandwidthAlertThreshold:
                    description: Specifies the port bandwidth threshold percentage.
                      If the bandwidth limit is met or exceeded, an alert is sent
                      to the seller
                    type: number
                  bandwidthThresholdNotifications:
                    description: A list of email addresses that will receive notifications
                      about bandwidth thresholds
                    items:
                      type: string
                    type: array
                  connectionNameLabel:
                    description: Custom name used for calling a connections i.e. circuit.
                      Defaults to Connection
                    type: string
                  ctagLabel:
                    description: C-Tag/Inner-Tag label name for the connections
                    type: string
                  description:
                    description: Description of the service profile
                    type: string
                  equinixManagedPortVlan:
                    description: Boolean value that indicates whether the port and
                      VLAN details are managed by Equinix
                    type: boolean
                  features:
                    description: Block of profile features configuration
                    items:
                      properties:
                        allowRemoteConnections:
                          description: Indicates whether or not connections to this
                            profile can be created from remote metro locations
                          type: boolean
                        testProfile:
                          description: Indicates whether or not this profile can be
                            used for test connections
                          type: boolean
                      required:
                      - allowRemoteConnections
                      type: object
                    type: array
                  integrationId:
                    description: Specifies the API integration ID that was provided
                      to the customer during onboarding
                    type: string
                  name:
                    description: Name of the service profile. An alpha-numeric 50
                      characters string which can include only hyphens and underscores
                    type: string
                  oversubscription:
                    description: Oversubscription limit that will cause alerting.
                      Default is 1x
                    type: string
                  oversubscriptionAllowed:
                    description: Boolean value that determines if, regardless of the
                      utilization, Equinix Fabric will continue to add connections
                      to your links until we reach the oversubscription limit
                    type: boolean
                  port:
                    description: One or more definitions of ports associated with
                      the profile
                    items:
                      properties:
                        metroCode:
                          description: Port location metro code
                          type: string
                        uuid:
                          description: Unique identifier of the port
                          type: string
                      required:
                      - metroCode
                      - uuid
                      type: object
                    type: array
                  private:
                    description: Boolean value that indicates whether or not this
                      is a private profile.
                    type: boolean
                  privateUserEmails:
                    description: A list of email addresses associated to users that
                      will be allowed to access this service profile. Applicable for
                      private profiles
                    items:
                      type: string
                    type: array
                  profileStatuschangeNotifications:
                    description: A list of email addresses that will receive notifications
                      about profile status changes
                    items:
                      type: string
                    type: array
                  redundancyRequired:
                    description: Boolean value that determines if yourconnections
                      will require redundancy
                    type: boolean
                  secondaryVlanFromPrimary:
                    description: Indicates whether the VLAN ID of the secondary connection
                      is the same as the primary connection
                    type: boolean
                  servicekeyAutogenerated:
                    description: Boolean value that indicates whether multiple connections
                      can be created with the same authorization key
                    type: boolean
                  speedBand:
                    description: One or more definitions of supported speed/bandwidth
                      configurations
                    items:
                      properties:
                        speed:
                          description: Speed/bandwidth supported by given service
                            profile
                          type: number
                        speedUnit:
                          description: Unit of the speed/bandwidth supported by given
                            service profile
                          type: string
                      required:
                      - speed
                      - speedUnit
                      type: object
                    type: array
                  speedCustomizationAllowed:
                    description: Boolean value that determines if customer is allowed
                      to enter a custom connection speed
                    type: boolean
                  speedFromApi:
                    description: Boolean valuta that determines if connection speed
                      will be derived from an API call
                    type: boolean
                  tagType:
                    description: Specifies additional tagging information required
                      by the seller profile for Dot1Q to QinQ translation
                    type: string
                  vcStatuschangeNotifications:
                    description: A list of email addresses that will receive notifications
                      about connections approvals and rejections
                    items:
                      type: string
                    type: array
                required:
                - bandwidthThresholdNotifications
                - features
                - name
                - port
                - profileStatuschangeNotifications
                - vcStatuschangeNotifications
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: L2ServiceprofileStatus defines the observed state of L2Serviceprofile.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  state:
                    description: Service profile provisioning status
                    type: string
                  uuid:
                    description: Unique identifier of the service profile
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
