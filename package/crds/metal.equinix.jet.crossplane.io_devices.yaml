---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: devices.metal.equinix.jet.crossplane.io
spec:
  group: metal.equinix.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - equinix
    kind: Device
    listKind: DeviceList
    plural: devices
    singular: device
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Device is the Schema for the Devices API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DeviceSpec defines the desired state of Device
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  alwaysPxe:
                    description: If true, a device with OS custom_ipxe will continue
                      to boot via iPXE on reboots. If true, a device with OS custom_ipxe
                      will
                    type: boolean
                  behavior:
                    description: Behavioral overrides that change how the resource
                      handles certain attribute updates. See Behavior below for more
                      details.
                    items:
                      properties:
                        allowChanges:
                          description: 'List of attributes that are allowed to change
                            without recreating the instance. Supported attributes:
                            custom_data, user_data" List of attributes that are allowed
                            to change without recreating the instance. Supported attributes:
                            `custom_data`, `user_data`'
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  billingCycle:
                    description: monthly or hourly monthly or hourly
                    type: string
                  customDataSecretRef:
                    description: A string of the desired Custom Data for the device.  By
                      default, changing this attribute will cause the provider to
                      destroy and recreate your device.  If reinstall is specified
                      or behavior.allow_changes includes "custom_data", the device
                      will be updated in-place instead of recreated. A string of the
                      desired Custom Data for the device.  By default, changing this
                      attribute will cause the provider to destroy and recreate your
                      device.  If `reinstall` is specified or `behavior.allow_changes`
                      includes `"custom_data"`, the device will be updated in-place
                      instead of recreated.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  description:
                    description: The device description. Description string for the
                      device
                    type: string
                  facilities:
                    description: (Deprecated) List of facility codes with deployment
                      preferences. Equinix Metal API will go through the list and
                      will deploy your device to first facility with free capacity.
                      List items must be facility codes or any (a wildcard). To find
                      the facility code, visit Facilities API docs, set your API auth
                      token in the top of the page and see JSON from the API response.
                      Conflicts with metro.  Use metro instead; read the facility
                      to metro migration guide List of facility codes with deployment
                      preferences. Equinix Metal API will go through the list and
                      will deploy your device to first facility with free capacity.
                      List items must be facility codes or any (a wildcard). To find
                      the facility code, visit [Facilities API docs](https://metal.equinix.com/developers/api/facilities/),
                      set your API auth token in the top of the page and see JSON
                      from the API response. Conflicts with metro
                    items:
                      type: string
                    type: array
                  forceDetachVolumes:
                    description: Delete device even if it has volumes attached. Only
                      applies for destroy action. Delete device even if it has volumes
                      attached. Only applies for destroy action
                    type: boolean
                  hardwareReservationId:
                    description: 'The UUID of the hardware reservation where you want
                      this device deployed, or next-available if you want to pick
                      your next available reservation automatically. Changing this
                      from a reservation UUID to next-available will re-create the
                      device in another reservation. Please be careful when using
                      hardware reservation UUID and next-available together for the
                      same pool of reservations. It might happen that the reservation
                      which Equinix Metal API will pick as next-available is the reservation
                      which you refer with UUID in another equinix_metal_device resource.
                      If that happens, and the equinix_metal_device with the UUID
                      is created later, resource creation will fail because the reservation
                      is already in use (by the resource created with next-available).
                      To workaround this, have the next-available resource explicitly
                      depend_on the resource with hardware reservation UUID, so that
                      the latter is created first. For more details, see issue #176.
                      The UUID of the hardware reservation where you want this device
                      deployed, or next-available if you want to pick your next available
                      reservation automatically'
                    type: string
                  hostname:
                    description: The device hostname used in deployments taking advantage
                      of Layer3 DHCP or metadata service configuration. The device
                      hostname used in deployments taking advantage of Layer3 DHCP
                      or metadata service configuration.
                    type: string
                  ipAddress:
                    description: A list of IP address types for the device. See IP
                      address below for more details. A list of IP address types for
                      the device (structure is documented below)
                    items:
                      properties:
                        cidr:
                          description: CIDR suffix for IP address block to be assigned,
                            i.e. amount of addresses. CIDR suffix for IP block assigned
                            to this device
                          type: number
                        reservationIds:
                          description: List of UUIDs of IP block reservations from
                            which the public IPv4 address should be taken. IDs of
                            reservations to pick the blocks from
                          items:
                            type: string
                          type: array
                        type:
                          description: One of private_ipv4, public_ipv4, public_ipv6.
                            one of public_ipv4,private_ipv4,public_ipv6
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  ipxeScriptUrl:
                    description: URL pointing to a hosted iPXE script. More information
                      is in the Custom iPXE doc. URL pointing to a hosted iPXE script.
                      More
                    type: string
                  metro:
                    description: Metro area for the new device. Conflicts with facilities.
                      Metro area for the new device. Conflicts with facilities
                    type: string
                  operatingSystem:
                    description: The operating system slug. To find the slug, or visit
                      Operating Systems API docs, set your API auth token in the top
                      of the page and see JSON from the API response. The operating
                      system slug. To find the slug, or visit [Operating Systems API
                      docs](https://metal.equinix.com/developers/api/operatingsystems),
                      set your API auth token in the top of the page and see JSON
                      from the API response.  By default, changing this attribute
                      will cause your device to be deleted and recreated.  If `reinstall`
                      is enabled, the device will be updated in-place instead of recreated.
                    type: string
                  plan:
                    description: The device plan slug. To find the plan slug, visit
                      Device plans API docs, set your auth token in the top of the
                      page and see JSON from the API response. The device plan slug.
                      To find the plan slug, visit [Device plans API docs](https://metal.equinix.com/developers/api/plans),
                      set your auth token in the top of the page and see JSON from
                      the API response
                    type: string
                  projectId:
                    description: The ID of the project in which to create the device
                      The ID of the project in which to create the device
                    type: string
                  projectIdRef:
                    description: Reference to a Project to populate projectId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  projectIdSelector:
                    description: Selector for a Project to populate projectId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  projectSshKeyIds:
                    description: Array of IDs of the project SSH keys which should
                      be added to the device. If you specify this array, only the
                      listed project SSH keys (and any SSH keys for the users specified
                      in user_ssh_key_ids) will be added. If no SSH keys are specified
                      (both user_ssh_keys_ids and project_ssh_key_ids are empty lists
                      or omitted), all parent project keys, parent project members
                      keys and organization members keys will be included.  Project
                      SSH keys can be created with the equinix_metal_project_ssh_key
                      resource. Array of IDs of the project SSH keys which should
                      be added to the device. If you specify this array, only the
                      listed project SSH keys (and any SSH keys for the users specified
                      in user_ssh_key_ids) will be added. If no SSH keys are specified
                      (both user_ssh_keys_ids and project_ssh_key_ids are empty lists
                      or omitted), all parent project keys, parent project members
                      keys and organization members keys will be included.  Project
                      SSH keys can be created with the [equinix_metal_project_ssh_key](equinix_metal_project_ssh_key.md)
                      resource
                    items:
                      type: string
                    type: array
                  reinstall:
                    description: Whether the device should be reinstalled instead
                      of destroyed when modifying user_data, custom_data, or operating
                      system. See Reinstall below for more details.
                    items:
                      properties:
                        deprovisionFast:
                          description: Whether the OS disk should be filled with 00h
                            bytes before reinstall. Defaults to false. Whether the
                            OS disk should be filled with `00h` bytes before reinstall
                          type: boolean
                        enabled:
                          description: Whether the provider should favour reinstall
                            over destroy and create. Defaults to false. Whether the
                            device should be reinstalled instead of destroyed
                          type: boolean
                        preserveData:
                          description: Whether the non-OS disks should be kept or
                            wiped during reinstall. Defaults to false. Whether the
                            non-OS disks should be kept or wiped during reinstall
                          type: boolean
                      type: object
                    type: array
                  storage:
                    description: JSON for custom partitioning. Only usable on reserved
                      hardware. More information in in the Custom Partitioning and
                      RAID doc. Please note that the disks.partitions.size attribute
                      must be a string, not an integer. It can be a number string,
                      or size notation string, e.g. "4G" or "8M" (for gigabytes and
                      megabytes). JSON for custom partitioning. Only usable on reserved
                      hardware. More information in in the [Custom Partitioning and
                      RAID](https://metal.equinix.com/developers/docs/servers/custom-partitioning-raid/)
                      doc
                    type: string
                  tags:
                    description: Tags attached to the device. Tags attached to the
                      device
                    items:
                      type: string
                    type: array
                  terminationTime:
                    description: Timestamp for device termination. For example 2021-09-03T16:32:00+03:00.
                      If you don't supply timezone info, timestamp is assumed to be
                      in UTC. Timestamp for device termination. For example "2021-09-03T16:32:00+03:00".
                      If you don't supply timezone info, timestamp is assumed to be
                      in UTC.
                    type: string
                  userDataSecretRef:
                    description: A string of the desired User Data for the device.  By
                      default, changing this attribute will cause the provider to
                      destroy and recreate your device.  If reinstall is specified
                      or behavior.allow_changes includes "user_data", the device will
                      be updated in-place instead of recreated. A string of the desired
                      User Data for the device.  By default, changing this attribute
                      will cause the provider to destroy and recreate your device.  If
                      `reinstall` is specified or `behavior.allow_changes` includes
                      `"user_data"`, the device will be updated in-place instead of
                      recreated.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  userSshKeyIds:
                    description: Array of IDs of the users whose SSH keys should be
                      added to the device. If you specify this array, only the listed
                      users' SSH keys (and any project SSH keys specified in project_ssh_key_ids)
                      will be added. If no SSH keys are specified (both user_ssh_keys_ids
                      and project_ssh_key_ids are empty lists or omitted), all parent
                      project keys, parent project members keys and organization members
                      keys will be included. User SSH keys can be created with the
                      equinix_metal_ssh_key resource. Array of IDs of the users whose
                      SSH keys should be added to the device. If you specify this
                      array, only the listed users' SSH keys (and any project SSH
                      keys specified in project_ssh_key_ids) will be added. If no
                      SSH keys are specified (both user_ssh_keys_ids and project_ssh_key_ids
                      are empty lists or omitted), all parent project keys, parent
                      project members keys and organization members keys will be included.
                      User SSH keys can be created with the [equinix_metal_ssh_key](equinix_metal_ssh_key.md)
                      resource
                    items:
                      type: string
                    type: array
                  waitForReservationDeprovision:
                    description: Only used for devices in reserved hardware. If set,
                      the deletion of this device will block until the hardware reservation
                      is marked provisionable (about 4 minutes in August 2019). Only
                      used for devices in reserved hardware. If set, the deletion
                      of this device will block until the hardware reservation is
                      marked provisionable (about 4 minutes in August 2019)
                    type: boolean
                required:
                - operatingSystem
                - plan
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: DeviceStatus defines the observed state of Device.
            properties:
              atProvider:
                properties:
                  accessPrivateIpv4:
                    description: The ipv4 private IP assigned to the device. The ipv4
                      private IP assigned to the device
                    type: string
                  accessPublicIpv4:
                    description: The ipv4 maintenance IP assigned to the device. The
                      ipv4 maintenance IP assigned to the device
                    type: string
                  accessPublicIpv6:
                    description: The ipv6 maintenance IP assigned to the device. The
                      ipv6 maintenance IP assigned to the device
                    type: string
                  created:
                    description: The timestamp for when the device was created. The
                      timestamp for when the device was created
                    type: string
                  deployedFacility:
                    description: (Deprecated) The facility where the device is deployed.
                      Use metro instead; read the facility to metro migration guide
                      The facility where the device is deployed
                    type: string
                  deployedHardwareReservationId:
                    description: ID of hardware reservation where this device was
                      deployed. It is useful when using the next-available hardware
                      reservation. ID of hardware reservation where this device was
                      deployed. It is useful when using the next-available hardware
                      reservation
                    type: string
                  id:
                    description: The ID of the device.
                    type: string
                  locked:
                    description: Whether the device is locked. Whether the device
                      is locked
                    type: boolean
                  network:
                    description: 'The device''s private and public IP (v4 and v6)
                      network details. See Network Attribute below for more details.
                      The device''s private and public IP (v4 and v6) network details.
                      When a device is run without any special network configuration,
                      it will have 3 addresses: public ipv4, private ipv4 and ipv6'
                    items:
                      properties:
                        address:
                          description: IPv4 or IPv6 address string.
                          type: string
                        cidr:
                          description: CIDR suffix for IP address block to be assigned,
                            i.e. amount of addresses.
                          type: number
                        family:
                          description: IP version. One of 4, 6.
                          type: number
                        gateway:
                          description: Address of router.
                          type: string
                        public:
                          description: Whether the address is routable from the Internet.
                          type: boolean
                      type: object
                    type: array
                  networkType:
                    description: (Deprecated) Network type of a device, used in Layer
                      2 networking. Since this attribute is deprecated you should
                      handle Network Type with one of equinix_metal_port, equinix_metal_device_network_type
                      resources or equinix_metal_port datasource. See network_types
                      guide for more info. Network type of a device, used in [Layer
                      2 networking](https://metal.equinix.com/developers/docs/networking/layer2/).
                      Will be one of layer3, hybrid, hybrid-bonded, layer2-individual,
                      layer2-bonded
                    type: string
                  ports:
                    description: List of ports assigned to the device. See Ports Attribute
                      below for more details. Ports assigned to the device
                    items:
                      properties:
                        bonded:
                          description: Whether this port is part of a bond in bonded
                            network setup.
                          type: boolean
                        id:
                          description: The ID of the device.
                          type: string
                        mac:
                          description: MAC address assigned to the port.
                          type: string
                        name:
                          description: Name of the port (e.g. eth0, or bond0).
                          type: string
                        type:
                          description: Type of the port (e.g. NetworkPort or NetworkBondPort).
                          type: string
                      type: object
                    type: array
                  sosHostname:
                    description: The hostname to use for Serial over SSH access to
                      the device The hostname to use for [Serial over SSH](https://deploy.equinix.com/developers/docs/metal/resilience-recovery/serial-over-ssh/)
                      access to the device
                    type: string
                  sshKeyIds:
                    description: List of IDs of SSH keys deployed in the device, can
                      be both user and project SSH keys. List of IDs of SSH keys deployed
                      in the device, can be both user and project SSH keys
                    items:
                      type: string
                    type: array
                  state:
                    description: The status of the device. The status of the device
                    type: string
                  updated:
                    description: The timestamp for the last time the device was updated.
                      The timestamp for the last time the device was updated
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
