apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: l2connections.ecx.equinix.jet.crossplane.io
spec:
  group: ecx.equinix.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - equinixjet
    kind: L2Connection
    listKind: L2ConnectionList
    plural: l2connections
    singular: l2connection
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: L2Connection is the Schema for the L2Connections API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: L2ConnectionSpec defines the desired state of L2Connection
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  additionalInfo:
                    description: One or more additional information key-value objects
                    items:
                      properties:
                        name:
                          description: Additional information key
                          type: string
                        value:
                          description: Additional information value
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  authorizationKey:
                    description: Text field used to authorize connection on the provider
                      side. Value depends on a provider service profile used for connection
                    type: string
                  deviceInterfaceId:
                    description: Identifier of network interface on a given device,
                      used for a connection. If not specified then first available
                      interface will be selected
                    format: int64
                    type: integer
                  deviceUuid:
                    description: Unique identifier of the Network Edge virtual device
                      from which the connection would originate
                    type: string
                  name:
                    description: Connection name. An alpha-numeric 24 characters string
                      which can include only hyphens and underscores
                    type: string
                  namedTag:
                    description: The type of peering to set up in case when connecting
                      to Azure Express Route. One of Public, Private, Microsoft, Manual
                    type: string
                  notifications:
                    description: A list of email addresses used for sending connection
                      update notifications
                    items:
                      type: string
                    type: array
                  portUuid:
                    description: Unique identifier of the buyer's port from which
                      the connection would originate
                    type: string
                  profileUuid:
                    description: Unique identifier of the service provider's service
                      profile
                    type: string
                  purchaseOrderNumber:
                    description: Connection's purchase order number to reflect on
                      the invoice
                    type: string
                  secondaryConnection:
                    description: Definition of secondary connection for redundant,
                      HA connectivity
                    items:
                      properties:
                        authorizationKey:
                          description: Text field used to authorize connection on
                            the provider side. Value depends on a provider service
                            profile used for connection
                          type: string
                        deviceInterfaceId:
                          description: Identifier of network interface on a given
                            device, used for a connection. If not specified then first
                            available interface will be selected
                          format: int64
                          type: integer
                        deviceUuid:
                          description: Unique identifier of the Network Edge virtual
                            device from which the connection would originate
                          type: string
                        name:
                          description: Connection name. An alpha-numeric 24 characters
                            string which can include only hyphens and underscores
                          type: string
                        portUuid:
                          description: Unique identifier of the buyer's port from
                            which the connection would originate
                          type: string
                        profileUuid:
                          description: Unique identifier of the service provider's
                            service profile
                          type: string
                        sellerMetroCode:
                          description: The metro code that denotes the connection’s
                            remote side (z-side)
                          type: string
                        sellerRegion:
                          description: The region in which the seller port resides
                          type: string
                        speed:
                          description: Speed/Bandwidth to be allocated to the connection
                          format: int64
                          type: integer
                        speedUnit:
                          description: Unit of the speed/bandwidth to be allocated
                            to the connection
                          type: string
                        vlanCtag:
                          description: C-Tag/Inner-Tag of the connection, a numeric
                            character ranging from 2 - 4094
                          format: int64
                          type: integer
                        vlanStag:
                          description: S-Tag/Outer-Tag of the connection, a numeric
                            character ranging from 2 - 4094
                          format: int64
                          type: integer
                      required:
                      - name
                      type: object
                    type: array
                  sellerMetroCode:
                    description: The metro code that denotes the connection’s remote
                      side (z-side)
                    type: string
                  sellerRegion:
                    description: The region in which the seller port resides
                    type: string
                  speed:
                    description: Speed/Bandwidth to be allocated to the connection
                    format: int64
                    type: integer
                  speedUnit:
                    description: Unit of the speed/bandwidth to be allocated to the
                      connection
                    type: string
                  vlanCtag:
                    description: C-Tag/Inner-Tag of the connection, a numeric character
                      ranging from 2 - 4094
                    format: int64
                    type: integer
                  vlanStag:
                    description: S-Tag/Outer-Tag of the connection, a numeric character
                      ranging from 2 - 4094
                    format: int64
                    type: integer
                  zsidePortUuid:
                    description: Unique identifier of the port on the remote side
                      (z-side)
                    type: string
                  zsideVlanCtag:
                    description: C-Tag/Inner-Tag of the connection on the remote side
                      (z-side)
                    format: int64
                    type: integer
                  zsideVlanStag:
                    description: S-Tag/Outer-Tag of the connection on the remote side
                      (z-side)
                    format: int64
                    type: integer
                required:
                - name
                - notifications
                - speed
                - speedUnit
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: L2ConnectionStatus defines the observed state of L2Connection.
            properties:
              atProvider:
                properties:
                  providerStatus:
                    type: string
                  redundancyType:
                    type: string
                  redundantUuid:
                    type: string
                  status:
                    type: string
                  uuid:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
