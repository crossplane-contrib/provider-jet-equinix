---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: l2connections.ecx.equinix.jet.crossplane.io
spec:
  group: ecx.equinix.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - equinix
    kind: L2Connection
    listKind: L2ConnectionList
    plural: l2connections
    singular: l2connection
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: L2Connection is the Schema for the L2Connections API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: L2ConnectionSpec defines the desired state of L2Connection
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  additionalInfo:
                    description: one or more additional information key-value objects
                      One or more additional information key-value objects
                    items:
                      properties:
                        name:
                          description: secondary connection name Additional information
                            key
                          type: string
                        value:
                          description: additional information value Additional information
                            value
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  authorizationKey:
                    description: Unique identifier authorizing Equinix to provision
                      a connection towards a cloud service provider. At Equinix, an
                      Authorization Key is a generic term and is NOT encrypted on
                      Equinix Fabric. Cloud Service Providers might use a different
                      name to refer to this key such as Service Key or Authentication
                      Key. Value depends on a provider service profile, more information
                      on Equinix Fabric how to guide. Text field used to authorize
                      connection on the provider side. Value depends on a provider
                      service profile used for connection
                    type: string
                  deviceInterfaceId:
                    description: Applicable with device_uuid, identifier of network
                      interface on a given device, used for a connection. If not specified
                      then first available interface will be selected. Identifier
                      of network interface on a given device, used for a connection.
                      If not specified then first available interface will be selected
                    type: number
                  deviceUuid:
                    description: Unique identifier of the Network Edge virtual device
                      from which the connection would originate. Unique identifier
                      of the Network Edge virtual device from which the connection
                      would originate
                    type: string
                  name:
                    description: Connection name. An alpha-numeric 24 characters string
                      which can include only hyphens and underscores Connection name.
                      An alpha-numeric 24 characters string which can include only
                      hyphens and underscores
                    type: string
                  namedTag:
                    description: 'The type of peering to set up when connecting to
                      Azure Express Route. Valid values: PRIVATE, MICROSOFT, MANUAL*,
                      PUBLIC*. The type of peering to set up in case when connecting
                      to Azure Express Route. One of PRIVATE, MICROSOFT, MANUAL, PUBLIC
                      (MANUAL and PUBLIC are deprecated and not available for new
                      connections)'
                    type: string
                  notifications:
                    description: A list of email addresses used for sending connection
                      update notifications. A list of email addresses used for sending
                      connection update notifications
                    items:
                      type: string
                    type: array
                  portUuid:
                    description: Unique identifier of the Equinix Fabric Port from
                      which the connection would originate. Unique identifier of the
                      buyer's port from which the connection would originate
                    type: string
                  profileUuid:
                    description: Unique identifier of the service provider's profile.
                      Unique identifier of the service provider's service profile
                    type: string
                  profileUuidRef:
                    description: Reference to a L2Serviceprofile to populate profileUuid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  profileUuidSelector:
                    description: Selector for a L2Serviceprofile to populate profileUuid.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  purchaseOrderNumber:
                    description: Connection's purchase order number to reflect on
                      the invoice Connection's purchase order number to reflect on
                      the invoice
                    type: string
                  secondaryConnection:
                    description: Definition of secondary connection for redundant,
                      HA connectivity. See Secondary Connection below for more details.
                      Definition of secondary connection for redundant, HA connectivity
                    items:
                      properties:
                        authorizationKey:
                          description: Unique identifier authorizing Equinix to provision
                            a connection towards a cloud service provider. If not
                            specified primary authorization_key will be used. However,
                            some service providers may require different keys for
                            each connection. More information on Equinix Fabric how
                            to guide. Text field used to authorize connection on the
                            provider side. Value depends on a provider service profile
                            used for connection
                          type: string
                        deviceInterfaceId:
                          description: Applicable with device_uuid, identifier of
                            network interface on a given device. If not specified
                            then first available interface will be selected. Identifier
                            of network interface on a given device, used for a connection.
                            If not specified then first available interface will be
                            selected
                          type: number
                        deviceUuid:
                          description: Applicable with primary device_uuid. Identifier
                            of the Network Edge virtual device from which the secondary
                            connection would originate. If not specified primary device_uuid
                            will be used. Unique identifier of the Network Edge virtual
                            device from which the connection would originate
                          type: string
                        name:
                          description: secondary connection name Connection name.
                            An alpha-numeric 24 characters string which can include
                            only hyphens and underscores
                          type: string
                        portUuid:
                          description: Applicable with primary port_uuid. Identifier
                            of the Equinix Fabric Port from which the secondary connection
                            would originate. If not specified primary port_uuid will
                            be used. Unique identifier of the buyer's port from which
                            the connection would originate
                          type: string
                        profileUuid:
                          description: Unique identifier of the service provider's
                            profile. Unique identifier of the service provider's service
                            profile
                          type: string
                        sellerMetroCode:
                          description: The metro code that denotes the secondary connection’s
                            destination (Z side). . The metro code that denotes the
                            connection's remote side (z-side)
                          type: string
                        sellerRegion:
                          description: The region in which the seller port resides.
                            If not specified primary seller_region will be used. The
                            region in which the seller port resides
                          type: string
                        serviceToken:
                          description: Required with primary service_token. Unique
                            Equinix Fabric key given by a provider that grants you
                            authorization to enable connectivity from an Equinix Fabric
                            Port or virtual device. Each connection (primary and secondary)
                            requires a separate token. More details in Fabric Service
                            Tokens. Unique Equinix Fabric key given by a provider
                            that grants you authorization to enable connectivity from
                            a shared multi-tenant port (a-side)
                          type: string
                        speed:
                          description: Speed/Bandwidth to be allocated to the secondary
                            connection. If not specified primary speed will be used.
                            Speed/Bandwidth to be allocated to the connection
                          type: number
                        speedUnit:
                          description: Unit of the speed/bandwidth to be allocated
                            to the secondary connection. If not specified primary
                            speed_unit will be used. Unit of the speed/bandwidth to
                            be allocated to the connection
                          type: string
                        vlanCtag:
                          description: Applicable with port_uuid. C-Tag/Inner-Tag
                            of the secondary connection, a numeric character ranging
                            from 2 - 4094. C-Tag/Inner-Tag of the connection, a numeric
                            character ranging from 2 - 4094
                          type: number
                        vlanStag:
                          description: S-Tag/Outer-Tag of the secondary connection,
                            a numeric character ranging from 2 - 4094. S-Tag/Outer-Tag
                            of the connection, a numeric character ranging from 2
                            - 4094
                          type: number
                      required:
                      - name
                      type: object
                    type: array
                  sellerMetroCode:
                    description: The metro code that denotes the connection’s remote/destination
                      side (z-side). The metro code that denotes the connection's
                      remote side (z-side)
                    type: string
                  sellerRegion:
                    description: The region in which the seller port resides. The
                      region in which the seller port resides
                    type: string
                  serviceToken:
                    description: '- A-side service tokens authorize you to create
                      a connection from a customer port, which created the token for
                      you, to a service profile or your own port. More details in
                      A-Side Fabric Service Tokens. Unique Equinix Fabric key given
                      by a provider that grants you authorization to enable connectivity
                      from a shared multi-tenant port (a-side)'
                    type: string
                  speed:
                    description: Speed/Bandwidth to be allocated to the connection.
                      Speed/Bandwidth to be allocated to the connection
                    type: number
                  speedUnit:
                    description: Unit of the speed/bandwidth to be allocated to the
                      connection. Unit of the speed/bandwidth to be allocated to the
                      connection
                    type: string
                  vlanCtag:
                    description: C-Tag/Inner-Tag of the connection - a numeric character
                      ranging from 2 - 4094. C-Tag/Inner-Tag of the connection, a
                      numeric character ranging from 2 - 4094
                    type: number
                  vlanStag:
                    description: S-Tag/Outer-Tag of the connection - a numeric character
                      ranging from 2 - 4094. S-Tag/Outer-Tag of the connection, a
                      numeric character ranging from 2 - 4094
                    type: number
                  zsidePortUuid:
                    description: Unique identifier of the port on the remote/destination
                      side (z-side). Allows you to connect between your own ports
                      or virtual devices across your company's Equinix Fabric deployment,
                      with no need for a private service profile. Unique identifier
                      of the port on the remote side (z-side)
                    type: string
                  zsideServiceToken:
                    description: '- Z-side service tokens authorize you to create
                      a connection from your port or virtual device to a customer
                      port which created the token for you. zside_service_token cannot
                      be used with secondary_connection. More details in Z-Side Fabric
                      Service Tokens. Unique Equinix Fabric key given by a provider
                      that grants you authorization to enable connectivity to a shared
                      multi-tenant port (z-side)'
                    type: string
                  zsideVlanCtag:
                    description: C-Tag/Inner-Tag of the connection on the remote/destination
                      side (z-side) - a numeric character ranging from 2 - 4094. secondary_connection
                      is defined it will internally use same zside_vlan_ctag for the
                      secondary connection. C-Tag/Inner-Tag of the connection on the
                      remote side (z-side)
                    type: number
                  zsideVlanStag:
                    description: S-Tag/Outer-Tag of the connection on the remote/destination
                      side (z-side) - a numeric character ranging from 2 - 4094. S-Tag/Outer-Tag
                      of the connection on the remote side (z-side)
                    type: number
                required:
                - name
                - notifications
                - speed
                - speedUnit
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: L2ConnectionStatus defines the observed state of L2Connection.
            properties:
              atProvider:
                properties:
                  actions:
                    description: One or more pending actions to complete connection
                      provisioning. One or more pending actions to complete connection
                      provisioning
                    items:
                      properties:
                        message:
                          type: string
                        operationId:
                          type: string
                        requiredData:
                          items:
                            properties:
                              editable:
                                type: boolean
                              key:
                                type: string
                              label:
                                type: string
                              validationPattern:
                                type: string
                              value:
                                description: additional information value
                                type: string
                            type: object
                          type: array
                        type:
                          type: string
                      type: object
                    type: array
                  id:
                    type: string
                  providerStatus:
                    description: Connection provisioning status on service provider's
                      side. Connection provisioning status on service provider's side
                    type: string
                  redundancyGroup:
                    description: Unique identifier of group containing a primary and
                      secondary connection. Unique identifier of group containing
                      a primary and secondary connection
                    type: string
                  redundancyType:
                    description: Connection redundancy type, applicable for HA connections.
                      Valid values are PRIMARY, SECONDARY. Connection redundancy type,
                      applicable for HA connections. Either primary or secondary
                    type: string
                  redundantUuid:
                    description: Unique identifier of the redundant connection, applicable
                      for HA connections. Unique identifier of the redundant connection,
                      applicable for HA connections
                    type: string
                  secondaryConnection:
                    description: Definition of secondary connection for redundant,
                      HA connectivity. See Secondary Connection below for more details.
                      Definition of secondary connection for redundant, HA connectivity
                    items:
                      properties:
                        actions:
                          description: One or more pending actions to complete connection
                            provisioning. One or more pending actions to complete
                            connection provisioning
                          items:
                            properties:
                              message:
                                type: string
                              operationId:
                                type: string
                              requiredData:
                                items:
                                  properties:
                                    editable:
                                      type: boolean
                                    key:
                                      type: string
                                    label:
                                      type: string
                                    validationPattern:
                                      type: string
                                    value:
                                      description: additional information value
                                      type: string
                                  type: object
                                type: array
                              type:
                                type: string
                            type: object
                          type: array
                        providerStatus:
                          description: Connection provisioning status on service provider's
                            side. Connection provisioning status on service provider's
                            side
                          type: string
                        redundancyGroup:
                          description: Unique identifier of group containing a primary
                            and secondary connection. Unique identifier of group containing
                            a primary and secondary connection
                          type: string
                        redundancyType:
                          description: Connection redundancy type, applicable for
                            HA connections. Valid values are PRIMARY, SECONDARY. Connection
                            redundancy type, applicable for HA connections. Either
                            primary or secondary
                          type: string
                        redundantUuid:
                          description: Unique identifier of the redundant connection,
                            applicable for HA connections. Unique identifier of the
                            redundant connection, applicable for HA connections
                          type: string
                        status:
                          description: Connection provisioning status on Equinix Fabric
                            side. Connection provisioning status on Equinix Fabric
                            side
                          type: string
                        uuid:
                          description: Unique identifier of the connection. Unique
                            identifier of the connection
                          type: string
                        vendorToken:
                          description: The Equinix Fabric Token the connection was
                            created with. Applicable if the connection was created
                            with a service_token (a-side) or zside_service_token (z-side).
                            The Equinix Fabric Token the connection was created with.
                            Applicable if the connection was created with a ServiceToken
                            (a-side) or ZSideServiceToken (z-side)
                          type: string
                        zsidePortUuid:
                          description: Unique identifier of the port on the remote/destination
                            side (z-side). Allows you to connect between your own
                            ports or virtual devices across your company's Equinix
                            Fabric deployment, with no need for a private service
                            profile. Unique identifier of the port on the remote side
                            (z-side)
                          type: string
                        zsideVlanCtag:
                          description: C-Tag/Inner-Tag of the connection on the remote/destination
                            side (z-side) - a numeric character ranging from 2 - 4094.
                            secondary_connection is defined it will internally use
                            same zside_vlan_ctag for the secondary connection. C-Tag/Inner-Tag
                            of the connection on the remote side (z-side)
                          type: number
                        zsideVlanStag:
                          description: S-Tag/Outer-Tag of the connection on the remote/destination
                            side (z-side) - a numeric character ranging from 2 - 4094.
                            S-Tag/Outer-Tag of the connection on the remote side (z-side)
                          type: number
                      type: object
                    type: array
                  status:
                    description: Connection provisioning status on Equinix Fabric
                      side. Connection provisioning status on Equinix Fabric side
                    type: string
                  uuid:
                    description: Unique identifier of the connection. Unique identifier
                      of the connection
                    type: string
                  vendorToken:
                    description: The Equinix Fabric Token the connection was created
                      with. Applicable if the connection was created with a service_token
                      (a-side) or zside_service_token (z-side). The Equinix Fabric
                      Token the connection was created with. Applicable if the connection
                      was created with a ServiceToken (a-side) or ZSideServiceToken
                      (z-side)
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
